image: registry.ritc.jp/ricos/allgebra/cuda10_2:0.2.0

before_script:
    - export MONOLISH_DIR="${CI_PROJECT_DIR}/${PREFIX}"
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MONOLISH_DIR}/lib

stages:
    - build_lib
    - test_build
    - common
    - blas
    - equation
    - logger
    - lang
    - deploy

.gpu_avx:
    variables:
        PREFIX: "gpu_avx"
        BUILD_GPU: "ON"
        USE_AVX: "ON"
    tags:
        - gpu
        - avx

.gpu_noavx:
    variables:
        PREFIX: "gpu_noavx"
        BUILD_GPU: "ON"
        USE_AVX: "OFF"
    tags:
        - gpu

.nogpu_avx:
    variables:
        PREFIX: "nogpu_avx"
        BUILD_GPU: "OFF"
        USE_AVX: "ON"
    tags:
        - avx

.nogpu_noavx:
    variables:
        PREFIX: "nogpu_noavx"
        BUILD_GPU: "OFF"
        USE_AVX: "OFF"

.build_cmake:
    stage: build_lib
    script:
        - cmake -Bbuild . -DBUILD_GPU=${BUILD_GPU} -DUSE_AVX=${USE_AVX} -DCMAKE_INSTALL_PREFIX=${MONOLISH_DIR}
        - cmake --build build --target install -- -j $(nproc) VERBOSE=1
    artifacts:
        paths:
            - ${PREFIX}
        expire_in: 60min
build_cmake_gpu_avx:
    extends:
      - .gpu_avx
      - .build_cmake
build_cmake_nogpu_avx:
    extends:
      - .nogpu_avx
      - .build_cmake
build_cmake_gpu_noavx:
    extends:
      - .gpu_noavx
      - .build_cmake
build_cmake_nogpu_noavx:
    extends:
      - .nogpu_noavx
      - .build_cmake

#
# Test templates
#
.test_nogpu_avx:
    extends: .nogpu_avx
    dependencies:
      - "build_cmake_nogpu_avx"
    script:
        - make -C test cpu
        - make -C test/${TEST_TARGET} run_cpu
.test_nogpu_noavx:
    extends: .nogpu_noavx
    dependencies:
      - "build_cmake_nogpu_noavx"
    script:
        - make -C test cpu
        - make -C test/${TEST_TARGET} run_cpu
.test_gpu_avx:
    dependencies:
      - "build_cmake_gpu_avx"
    script:
        - make -C test gpu
        - make -C test/${TEST_TARGET} run_gpu
.test_gpu_noavx:
    dependencies:
      - "build_cmake_gpu_noavx"
    script:
        - make -C test gpu
        - make -C test/${TEST_TARGET} run_gpu

#
# vector_common
#
vector_common_nogpu_avx:
    stage: common
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "vector_common"
vector_common_nogpu_noavx:
    stage: common
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "vector_common"
vector_common_gpu_avx:
    stage: common
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "vector_common"
vector_common_gpu_noavx:
    stage: common
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "vector_common"

#
# matrix_common
#
matrix_common_nogpu_avx:
    stage: common
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "matrix_common"
matrix_common_nogpu_noavx:
    stage: common
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "matrix_common"
matrix_common_gpu_avx:
    stage: common
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "matrix_common"
matrix_common_gpu_noavx:
    stage: common
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "matrix_common"

#
# vector_blas
#
vector_blas_nogpu_avx:
    stage: blas
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "vector_blas"
vector_blas_nogpu_noavx:
    stage: blas
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "vector_blas"
vector_blas_gpu_avx:
    stage: blas
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "vector_blas"
vector_blas_gpu_noavx:
    stage: blas
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "vector_blas"

#
# matrix_blas
#
matrix_blas_nogpu_avx:
    stage: blas
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "matrix_blas"
matrix_blas_nogpu_noavx:
    stage: blas
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "matrix_blas"
matrix_blas_gpu_avx:
    stage: blas
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "matrix_blas"
matrix_blas_gpu_noavx:
    stage: blas
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "matrix_blas"

#
# equation
#
equation_nogpu_avx:
    stage: equation
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "equation"
equation_nogpu_noavx:
    stage: equation
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "equation"
equation_gpu_avx:
    stage: equation
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "equation"
equation_gpu_noavx:
    stage: equation
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "equation"

#
# logger
#
logger_nogpu_avx:
    stage: logger
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "logger"
logger_nogpu_noavx:
    stage: logger
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "logger"
logger_gpu_avx:
    stage: logger
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "logger"
logger_gpu_noavx:
    stage: logger
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "logger"

#
# lang
#
lang_nogpu_avx:
    stage: lang
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "lang"
lang_nogpu_noavx:
    stage: lang
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "lang"
lang_gpu_avx:
    stage: lang
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "lang"
lang_gpu_noavx:
    stage: lang
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "lang"

#
# docker and pages
#
docker:
    image: docker:latest
    stage: deploy
    services:
        - docker:dind
    script:
        - apk add make
        - make -C docker push
    tags:
        - docker

pages:
    image: registry.ritc.jp/ricos/allgebra/doxygen:0.2.0
    stage: deploy
    script:
        - rm -rf public html
        - doxygen Doxyfile
        - mv html public
        - cp -r test/logger/logging/*.html public/
    artifacts:
        paths:
            - public
        expire_in: 20min
    only:
        - master

clang_format:
    image: registry.ritc.jp/ricos/allgebra/clang-format:0.2.0
    stage: build_lib
    script:
        - check-format.sh
    allow_failure: true

