image: ghcr.io/ricosjp/allgebra/cuda10_2/mkl:20.10.1

before_script:
    - export MONOLISH_DIR="${CI_PROJECT_DIR}/${PREFIX}"
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MONOLISH_DIR}/lib

stages:
    - build_lib
    - test_build
    - vector
    - matrix
    - equation
    - logger
    - lang
    - benchmark
    - deploy

.gpu_avx:
    variables:
        PREFIX: "gpu_avx"
        TEST_TARGET: "gpu"
        MONOLISH_USE_GPU: "ON"
        MONOLISH_USE_AVX: "ON"
    tags:
        - gpu
        - avx

.gpu_noavx:
    variables:
        PREFIX: "gpu_noavx"
        TEST_TARGET: "gpu"
        MONOLISH_USE_GPU: "ON"
        MONOLISH_USE_AVX: "OFF"
    tags:
        - gpu

.nogpu_avx:
    variables:
        PREFIX: "nogpu_avx"
        TEST_TARGET: "cpu"
        MONOLISH_USE_GPU: "OFF"
        MONOLISH_USE_AVX: "ON"
    tags:
        - avx

.nogpu_noavx:
    variables:
        PREFIX: "nogpu_noavx"
        TEST_TARGET: "cpu"
        MONOLISH_USE_GPU: "OFF"
        MONOLISH_USE_AVX: "OFF"

.build_cmake:
    stage: build_lib
    script:
        - cmake -Bbuild . -DMONOLISH_USE_GPU=${MONOLISH_USE_GPU} -DMONOLISH_USE_AVX=${MONOLISH_USE_AVX} -DCMAKE_INSTALL_PREFIX=${MONOLISH_DIR}
        - cmake --build build --target install -- -j $(nproc) VERBOSE=1
        - make -C test -j $(nproc) ${TEST_TARGET}
    artifacts:
        paths:
            - ${PREFIX}
            - test/
        expire_in: 60min
build_cmake_gpu_avx:
    extends:
      - .gpu_avx
      - .build_cmake
build_cmake_gpu_noavx:
    extends:
      - .gpu_noavx
      - .build_cmake
build_cmake_nogpu_avx:
    extends:
      - .nogpu_avx
      - .build_cmake
build_cmake_nogpu_noavx:
    extends:
      - .nogpu_noavx
      - .build_cmake

#
# Test templates
#
.test_nogpu_avx:
    extends:
      - .nogpu_avx
    needs:
      - "build_cmake_nogpu_avx"
    script:
      - make -C test/${TEST_TARGET} run_cpu
.test_nogpu_noavx:
    extends:
      - .nogpu_noavx
    needs:
      - "build_cmake_nogpu_noavx"
    script:
      - make -C test/${TEST_TARGET} run_cpu
.test_gpu_avx:
    extends:
      - .gpu_avx
    needs:
      - "build_cmake_gpu_avx"
    script:
      - make -C test/${TEST_TARGET} run_gpu
.test_gpu_noavx:
    extends:
      - .gpu_noavx
    needs:
      - "build_cmake_gpu_noavx"
    script:
      - make -C test/${TEST_TARGET} run_gpu

#
# vector
#
vector_nogpu_avx:
    stage: vector
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "vector"
vector_nogpu_noavx:
    stage: vector
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "vector"
vector_gpu_avx:
    stage: vector
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "vector"
vector_gpu_noavx:
    stage: vector
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "vector"

#
# matrix
#
matrix_nogpu_avx:
    stage: matrix
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "matrix"
matrix_nogpu_noavx:
    stage: matrix
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "matrix"
matrix_gpu_avx:
    stage: matrix
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "matrix"
matrix_gpu_noavx:
    stage: matrix
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "matrix"

#
# equation
#
equation_nogpu_avx:
    stage: equation
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "equation"
equation_nogpu_noavx:
    stage: equation
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "equation"
equation_gpu_avx:
    stage: equation
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "equation"
equation_gpu_noavx:
    stage: equation
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "equation"

#
# logger
#
.logger_artifact:
    artifacts:
      paths:
        - test/logger/logging
      expire_in: 60min
logger_nogpu_avx:
    stage: logger
    extends:
      - .test_nogpu_avx
      - .logger_artifact
    variables:
      TEST_TARGET: "logger"
logger_nogpu_noavx:
    stage: logger
    extends:
      - .test_nogpu_noavx
      - .logger_artifact
    variables:
      TEST_TARGET: "logger"
logger_gpu_avx:
    stage: logger
    extends:
      - .test_gpu_avx
      - .logger_artifact
    variables:
      TEST_TARGET: "logger"
logger_gpu_noavx:
    stage: logger
    extends:
      - .test_gpu_noavx
      - .logger_artifact
    variables:
      TEST_TARGET: "logger"

#
# lang
#
lang_nogpu_avx:
    stage: lang
    extends: .test_nogpu_avx
    variables:
      TEST_TARGET: "lang"
lang_nogpu_noavx:
    stage: lang
    extends: .test_nogpu_noavx
    variables:
      TEST_TARGET: "lang"
lang_gpu_avx:
    stage: lang
    extends: .test_gpu_avx
    variables:
      TEST_TARGET: "lang"
lang_gpu_noavx:
    stage: lang
    extends: .test_gpu_noavx
    variables:
      TEST_TARGET: "lang"

#
# benchmark
#
.benchmark_nogpu_avx:
    stage: benchmark
    extends:
      - .nogpu_avx
    needs:
      - "build_cmake_nogpu_avx"
    artifacts:
        paths:
            - benchmark/
        expire_in: 20min
    script:
      - cd benchmark
      - make cpu
      - make run_cpu
.test_nogpu_noavx:
    stage: benchmark
    extends:
      - .nogpu_noavx
    needs:
      - "build_cmake_nogpu_noavx"
    artifacts:
        paths:
            - benchmark/
        expire_in: 20min
    script:
      - cd benchmark
      - make cpu
      - make run_cpu
.test_gpu_avx:
    stage: benchmark
    extends:
      - .gpu_avx
    needs:
      - "build_cmake_gpu_avx"
    artifacts:
        paths:
            - benchmark/
        expire_in: 20min
    script:
      - cd benchmark
      - make gpu
      - make run_cpu
.test_gpu_noavx:
    stage: benchmark
    extends:
      - .gpu_noavx
    needs:
      - "build_cmake_gpu_noavx"
    artifacts:
        paths:
            - benchmark/
        expire_in: 20min
    script:
      - cd benchmark
      - make gpu
      - make run_cpu

#
# docker and pages
#
docker:
    # dependencies: require all tests
    image: docker:latest
    stage: deploy
    services:
        - docker:dind
    script:
        - apk add make
        - make -C docker push
    tags:
        - docker

pages:
    dependencies:
      - logger_gpu_avx
      - logger_nogpu_avx
      # and must be after all tests passed
      # To avoid overwrite logger.html
    image: ghcr.io/ricosjp/allgebra/doxygen:20.10.1
    stage: deploy
    script:
        - rm -rf public html
        - doxygen Doxyfile
        - mv html public
        - cp -r test/logger/logging/*.html public/
    artifacts:
        paths:
            - public
        expire_in: 20min
    only:
        - master

benchmark_result:
    stage: deploy
    script:
        - git config --global user.name "monolish_ci-runner"
        - git config --global user.email "monolish_ci_runner@example.jp"
        - cd benchmark
        - make commit_result

clang_format:
    image: ghcr.io/ricosjp/allgebra/clang-format:20.10.1
    stage: build_lib
    script:
        - check-format.sh
    allow_failure: true

keep-changelog:
    image: ghcr.io/ricosjp/allgebra/clang-format:20.10.1
    stage: build_lib
    script:
        - bash -c "! git diff --exit-code origin/master CHANGELOG.md"
    allow_failure: true
    except:
        - master

