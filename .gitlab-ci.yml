image: registry.ritc.jp/ricos/allgebra

before_script:
    - export MONOLISH_DIR=${CI_PROJECT_DIR}/install_lib
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MONOLISH_DIR}/lib

stages:
    - build_lib
    - test_build
    - common
    - blas
    - equation
    - logger
    - deploy
      
## build monolish ###############################
build_cpu:
    stage: build_lib
    script:
        - make cpu; make install
    artifacts:
        paths:
            - install_lib/
        expire_in: 60min

build_cpu_debug:
    stage: build_lib
    script:
        - make cpu-debug; make install MONOLISH_DIR=${CI_PROJECT_DIR}/install_lib/debug
    artifacts:
        paths:
            - install_lib/
        expire_in: 60min

build_gpu:
    stage: build_lib
    script:
        - make gpu; make install
    artifacts:
        paths:
            - install_lib/
        expire_in: 60min
    tags:
        - gpu

build_gpu_debug:
    stage: build_lib
    script:
        - make gpu-debug; make install MONOLISH_DIR=${CI_PROJECT_DIR}/install_lib/debug
    artifacts:
        paths:
            - install_lib/
        expire_in: 60min
    tags:
        - gpu

## build test codes ###############################
build_test_cpu:
    stage: test_build
    script:
        - cd test/; make cpu
    artifacts:
        paths:
            - test/
        expire_in: 60min

build_test_gpu:
    stage: test_build
    script:
        - cd test/; make gpu
    artifacts:
        paths:
            - test/
        expire_in: 60min
    tags:
        - gpu

## test common ###################################################
common_cpu:
    stage: common
    script:
        - cd test/common/
        - make run_cpu
    artifacts:
        paths:
            - test/
        expire_in: 60min

common_gpu:
    stage: common
    script:
        - cd test/common/
        - make run_gpu
        - make run_gpu PROFILER=nvprof
    artifacts:
        paths:
            - test/
        expire_in: 60min
    tags:
        - gpu

## test blas ###################################################

blas_cpu:
    stage: blas
    script:
        - cd test/blas/
        - make run_cpu
    artifacts:
        paths:
            - test/
        expire_in: 60min

blas_gpu:
    stage: blas
    script:
        - cd test/blas/
        - make run_gpu
        - make run_gpu PROFILER=nvprof
    artifacts:
        paths:
            - test/
        expire_in: 60min
    tags:
        - gpu

## test equation ###################################################

equation_cpu:
    stage: equation
    script:
        - cd test/equation/
        - make run_cpu
    artifacts:
        paths:
            - test/
        expire_in: 60min

equation_gpu:
    stage: equation
    script:
        - cd test/equation/
        - make run_gpu
        - make run_gpu PROFILER=nvprof
    artifacts:
        paths:
            - test/
        expire_in: 60min
    tags:
        - gpu

## test logger ###################################################

logger_cpu:
    stage: logger
    script:
        - cd test/logger/
        - make run_cpu
    artifacts:
        paths:
            - test/
        expire_in: 60min

logger_gpu:
    stage: logger
    script:
        - cd test/logger/
        - make run_gpu
        - make run_gpu PROFILER=nvprof
    artifacts:
        paths:
            - test/
        expire_in: 60min
    tags:
        - gpu

## docker and pages #################################################################

docker:
    image: docker:latest
    stage: deploy
    services:
        - docker:dind
    script:
        - apk add make
        - cp -r install_lib/lib/ docker/
        - cp -r install_lib/include/ docker/
        - ls docker/
        - make -f docker/Makefile push
    tags:
        - docker

docker_debug:
    image: docker:latest
    stage: deploy
    services:
        - docker:dind
    script:
        - apk add make
        - cp -r install_lib/debug/lib/ docker/
        - cp -r install_lib/debug/include/ docker/
        - ls docker/
        - make -f docker/Makefile push CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME}-debug
    tags:
        - docker

pages:
    stage: deploy
    script:
        - apt update
        - apt install -y doxygen graphviz
        - cd doc; doxygen; ls; cd ..
        - rm -rf public/doxygen
        - cp -r doc/html public/
        - cp -r test/logger/logging/*.html public/
    artifacts:
        paths:
            - public
        expire_in: 20min
    only:
        - master
        - 50-small_bug_fix
