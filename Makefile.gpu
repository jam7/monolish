TARGET=./lib/libmonolish_gpu.so

CXX=g++
CXXFLAGS=-O3 -std=c++11 
CXXFLAGS+=-fopenacc -foffload=nvptx-none -fPIC
CXXFLAGS+=--shared
CXXFLAGS+=-DUSE_GPU

#####################
CUDA_INC = -I/usr/local/cuda-10.0/targets/x86_64-linux/include/ 
CUDA_LIB = -L/usr/local/cuda-10.0/targets/x86_64-linux/lib/ 
CUDA_FLAGS= $(CUDA_INC) $(CUDA_LIB)
#####################

LINK_FLAGS=-lcuda -lcublas -lcusolver -lcusparse -lcudart

#####################

SRCS =$(notdir $(wildcard  ./src/*.cpp))
SRCS +=$(notdir $(wildcard ./src/equation/*.cpp))
SRCS +=$(notdir $(wildcard ./src/precon/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/vector/dot/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/sparse/util/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/sparse/spmv/*.cpp))
SRCS +=$(notdir $(wildcard ./src/external_IF*.cpp))

vpath %.cpp ./src/
vpath %.cpp ./src/equation/
vpath %.cpp ./src/external_IF/
vpath %.cpp ./src/blas/
vpath %.cpp ./src/blas/vector/
vpath %.cpp ./src/blas/vector/dot/
vpath %.cpp ./src/blas/sparse/
vpath %.cpp ./src/blas/sparse/util
vpath %.cpp ./src/blas/sparse/spmv

OBJDIR=./obj/gpu/

OBJS=$(addprefix $(OBJDIR)/, $(SRCS:.cpp=.o))


all: $(TARGET)

$(TARGET): $(OBJS)
	mkdir -p lib
	sleep 1s
	$(CXX) $(CXXFLAGS) $(LINK_FLAGS) $(CUDA_FLAGS) $(OBJS) -o $(TARGET) $(LINK_FLAGS)

$(OBJDIR)/%.o: %.cpp $(EXTERNALS)
	mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) $(CUDA_FLAGS) -I../include -c $< -o $@

$(EXTERNALS):
	git submodule update -i

libs:
	make -C external

test:
	cd test; make; make run

clean:
	- rm $(OBJDIR)/*
	- rm lib/*
