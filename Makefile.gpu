TARGET=./lib/libmonolish_gpu.so

CXX=g++
CXXFLAGS=-O3 -std=c++17
CXXFLAGS+=-fopenacc -foffload=nvptx-none -fPIC
CXXFLAGS+=--shared
CXXFLAGS+=-DUSE_GPU
CXXFLAGS+=$(CXXFLAGS_EXTRA)

#####################
CUDA_INC = -I/usr/local/cuda-10.0/targets/x86_64-linux/include/ 
CUDA_LIB = -L/usr/local/cuda-10.0/targets/x86_64-linux/lib/ 
CUDA_FLAGS= $(CUDA_INC) $(CUDA_LIB)
#####################

LINK_FLAGS=-lcuda -lcublas -lcusolver -lcusparse -lcudart

#####################

SRCS =$(notdir $(wildcard  ./src/*.cpp))

SRCS +=$(notdir $(wildcard ./src/equation/*.cpp))
SRCS +=$(notdir $(wildcard ./src/equation/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/blas/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/utils/*.cpp))

#############################################################

vpath %.cpp ./src/

vpath %.cpp ./src/equation/
vpath %.cpp ./src/equation/lu/
vpath %.cpp ./src/equation/qr/
vpath %.cpp ./src/equation/cholesky/

vpath %.cpp ./src/blas/arithmetic/
vpath %.cpp ./src/blas/vector/
vpath %.cpp ./src/blas/matrix/

vpath %.cpp ./src/utils/

#############################################################

OBJDIR=./obj/gpu/

OBJS=$(addprefix $(OBJDIR)/, $(SRCS:.cpp=.o))


all: $(TARGET)

$(TARGET): $(OBJS)
	mkdir -p lib
	$(CXX) $(CXXFLAGS) $(LINK_FLAGS) $(CUDA_FLAGS) $(OBJS) -o $(TARGET) $(LINK_FLAGS)

$(OBJDIR)/%.o: %.cpp $(EXTERNALS)
	mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) $(CUDA_FLAGS) -I../include -c $< -o $@

$(EXTERNALS):
	git submodule update -i

libs:
	make -C external

test:
	cd test; make; make run

clean:
	- rm $(OBJDIR)/*
	- rm lib/*
