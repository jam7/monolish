TARGET=./lib/libmonolish_sxat.so

MONOLISH_DIR?=$(HOME)/lib/monolish

CXX=nc++
CXXFLAGS=-O3 -lm -fopenmp -pthread -std=c++17 -fPIC
CXXFLAGS += $(CXXFLAGS_EXTRA)

LIBFLAGS = -shared 
BLAS_LIB = -I/opt/nec/ve/nlc/2.1.0/include/ 
BLAS_LIB += -L/opt/nec/ve/nlc/2.1.0/lib/
BLAS_LIB += -lcblas -lblas_openmp

####################

SRCS =$(notdir $(wildcard  ./src/*.cpp))

SRCS +=$(notdir $(wildcard ./src/blas/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/*/*.cpp))
SRCS +=$(notdir $(wildcard ./src/blas/*/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/equation/*.cpp))
SRCS +=$(notdir $(wildcard ./src/equation/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/internal/*.cpp))
SRCS +=$(notdir $(wildcard ./src/internal/*/*.cpp))
SRCS +=$(notdir $(wildcard ./src/internal/*/*/*.cpp))
SRCS +=$(notdir $(wildcard ./src/internal/*/*/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/utils/*.cpp))
SRCS +=$(notdir $(wildcard ./src/utils/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/vml/*.cpp))
SRCS +=$(notdir $(wildcard ./src/vml/*/*.cpp))

SRCS +=$(notdir $(wildcard ./src/mpi/*.cpp))

#############################################################

vpath %.cpp ./src/

vpath %.cpp ./src/blas/vector/
vpath %.cpp ./src/blas/matrix/
vpath %.cpp ./src/blas/matrix/copy/
vpath %.cpp ./src/blas/matrix/mataddsub/
vpath %.cpp ./src/blas/matrix/matmul
vpath %.cpp ./src/blas/matrix/matvec
vpath %.cpp ./src/blas/matrix/scal
vpath %.cpp ./src/blas/matrix/diag_op

vpath %.cpp ./src/equation/
vpath %.cpp ./src/equation/lu/
vpath %.cpp ./src/equation/qr/
vpath %.cpp ./src/equation/cholesky/

vpath %.cpp ./src/internal/
vpath %.cpp ./src/internal/arithmetic/
vpath %.cpp ./src/internal/lapack/
vpath %.cpp ./src/internal/lapack/getrf/
vpath %.cpp ./src/internal/lapack/getrs/
vpath %.cpp ./src/internal/lapack/syev/
vpath %.cpp ./src/internal/lapack/sygv/
vpath %.cpp ./src/internal/lapack/sytrf/
vpath %.cpp ./src/internal/lapack/sytrs/
vpath %.cpp ./src/internal/math/

vpath %.cpp ./src/utils/
vpath %.cpp ./src/utils/getvec/
vpath %.cpp ./src/utils/at_insert_sort/
vpath %.cpp ./src/utils/compare/
vpath %.cpp ./src/utils/convert
vpath %.cpp ./src/utils/copy/
vpath %.cpp ./src/utils/create_matrix/
vpath %.cpp ./src/utils/fill/
vpath %.cpp ./src/utils/IO/
vpath %.cpp ./src/utils/system/
vpath %.cpp ./src/utils/transpose/
vpath %.cpp ./src/utils/minus/

vpath %.cpp ./src/vml/linearoperator/
vpath %.cpp ./src/vml/matrix/
vpath %.cpp ./src/vml/vector/

vpath %.cpp ./src/mpi/

#############################################################

.PHONY = libs test clean

OBJDIR=./obj/a64fx/

OBJS=$(addprefix $(OBJDIR)/, $(SRCS:.cpp=.o))

all: $(TARGET)

$(TARGET): $(OBJS)
	mkdir -p lib
	$(CXX) $(CXXFLAGS) $(LIBFLAGS) $(OBJS) $(LIB_INC) $(LIB_OBJ) -o $(TARGET) $(LIB_INC) $(LIB_OBJ) 

$(OBJDIR)/%.o: %.cpp
	mkdir -p $(OBJDIR)
	$(CXX) $(CXXFLAGS) $(LIB_INC) $(LIB_OBJ) -I../include -c $< -o $@ 

libs:
	git submodule update -i
	make -C external

test:
	cd test; make; make run
	
install:
	-mkdir -p $(MONOLISH_DIR)
	-mkdir -p $(MONOLISH_DIR)/external
	-cp -r lib $(MONOLISH_DIR)
	-cp -r include $(MONOLISH_DIR)

clean:
	- rm $(OBJDIR)/*
	- rm lib/*
	- rm -r $(MONOLISH_DIR)
