// This code is generated by gen_adds.sh
#include "dense_adds.hpp"
#include "dense_line_adds.hpp"

namespace monolish::blas {

void adds(const double alpha, const matrix::Dense<double> &A,
          matrix::Dense<double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const matrix::Dense<double> &A,
          view_Dense<vector<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const matrix::Dense<double> &A,
          view_Dense<matrix::Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const matrix::Dense<double> &A,
          view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const view_Dense<vector<double>, double> &A,
          matrix::Dense<double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const view_Dense<vector<double>, double> &A,
          view_Dense<vector<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const view_Dense<vector<double>, double> &A,
          view_Dense<matrix::Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha, const view_Dense<vector<double>, double> &A,
          view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<matrix::Dense<double>, double> &A,
          matrix::Dense<double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<matrix::Dense<double>, double> &A,
          view_Dense<vector<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<matrix::Dense<double>, double> &A,
          view_Dense<matrix::Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<matrix::Dense<double>, double> &A,
          view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<tensor::tensor_Dense<double>, double> &A,
          matrix::Dense<double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<tensor::tensor_Dense<double>, double> &A,
          view_Dense<vector<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<tensor::tensor_Dense<double>, double> &A,
          view_Dense<matrix::Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const double alpha,
          const view_Dense<tensor::tensor_Dense<double>, double> &A,
          view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const matrix::Dense<float> &A,
          matrix::Dense<float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const matrix::Dense<float> &A,
          view_Dense<vector<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const matrix::Dense<float> &A,
          view_Dense<matrix::Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const matrix::Dense<float> &A,
          view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<vector<float>, float> &A,
          matrix::Dense<float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<vector<float>, float> &A,
          view_Dense<vector<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<vector<float>, float> &A,
          view_Dense<matrix::Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<vector<float>, float> &A,
          view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<matrix::Dense<float>, float> &A,
          matrix::Dense<float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<matrix::Dense<float>, float> &A,
          view_Dense<vector<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<matrix::Dense<float>, float> &A,
          view_Dense<matrix::Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha, const view_Dense<matrix::Dense<float>, float> &A,
          view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha,
          const view_Dense<tensor::tensor_Dense<float>, float> &A,
          matrix::Dense<float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha,
          const view_Dense<tensor::tensor_Dense<float>, float> &A,
          view_Dense<vector<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha,
          const view_Dense<tensor::tensor_Dense<float>, float> &A,
          view_Dense<matrix::Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds(const float alpha,
          const view_Dense<tensor::tensor_Dense<float>, float> &A,
          view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_core(alpha, A, C);
}
void adds_row(const matrix::Dense<double> &A, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const matrix::Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_row(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_row_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x, matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x, view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<double>, double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              matrix::Dense<double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<vector<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<matrix::Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_Dense<tensor::tensor_Dense<double>, double> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const matrix::Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x, view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x, matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<vector<float>, float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              matrix::Dense<float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<vector<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<matrix::Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
void adds_col(const view_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_Dense<tensor::tensor_Dense<float>, float> &C) {
  adds_col_core(A, num, x, C);
}
} // namespace monolish::blas
