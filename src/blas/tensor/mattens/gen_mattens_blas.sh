#!/bin/bash

TRANSPOSE_BOOL(){
    if [ $1 = "N" ]
    then
        echo "false"
    else
        echo "true"
    fi
}

echo "//this code is generated by gen_mattens_blas.sh
#include \"../../../../include/monolish_blas.hpp\"
#include \"../../../internal/monolish_internal.hpp\"
#include \"crs-tensor_dense_mattens.hpp\"
#include \"dense-tensor_dense_mattens.hpp\"

namespace monolish::blas {
"

## mattens Dense-tensor_Dense
for prec in double float; do
    if [ $prec = "double" ]
    then
        echo "void mattens(const matrix::Dense<$prec> &A, const tensor::tensor_Dense<$prec> &B, tensor::tensor_Dense<$prec> &C){Dense_tensor_Dense_Dmattens_core(1.0, A, B, 0.0, C, false, false);}"
        echo "void mattens(const $prec &a, const matrix::Dense<$prec> &A, const tensor::tensor_Dense<$prec> &B, const $prec &b, tensor::tensor_Dense<$prec> &C){Dense_tensor_Dense_Dmattens_core(a, A, B, b, C, false, false);}"
    else
        echo "void mattens(const matrix::Dense<$prec> &A, const tensor::tensor_Dense<$prec> &B, tensor::tensor_Dense<$prec> &C){Dense_tensor_Dense_Smattens_core(1.0, A, B, 0.0, C, false, false);}"
        echo "void mattens(const $prec &a, const matrix::Dense<$prec> &A, const tensor::tensor_Dense<$prec> &B, const $prec &b, tensor::tensor_Dense<$prec> &C){Dense_tensor_Dense_Smattens_core(a, A, B, b, C, false, false);}"
    fi
done

echo ""
## mattens CRS-tensor_Dense
for prec in double float; do
    if [ $prec = "double" ]
    then
        echo "void mattens(const matrix::CRS<$prec> &A, const tensor::tensor_Dense<$prec> &B, tensor::tensor_Dense<$prec> &C){CRS_tensor_Dense_Dmattens_core(1.0, A, B, 0.0, C);}"
        echo "void mattens(const $prec &a, const matrix::CRS<$prec> &A, const tensor::tensor_Dense<$prec> &B, const $prec &b, tensor::tensor_Dense<$prec> &C){CRS_tensor_Dense_Dmattens_core(a, A, B, b, C);}"
    else
        echo "void mattens(const matrix::CRS<$prec> &A, const tensor::tensor_Dense<$prec> &B, tensor::tensor_Dense<$prec> &C){CRS_tensor_Dense_Smattens_core(1.0, A, B, 0.0, C);}"
        echo "void mattens(const $prec &a, const matrix::CRS<$prec> &A, const tensor::tensor_Dense<$prec> &B, const $prec &b, tensor::tensor_Dense<$prec> &C){CRS_tensor_Dense_Smattens_core(a, A, B, b, C);}"
    fi
done

echo ""

echo "}"
