#!/bin/bash

TRANSPOSE_BOOL(){
    if [ $1 = "N" ]
    then
        echo "false"
    else
        echo "true"
    fi
}

echo "//this code is generated by gen_tensvec_blas.sh
#include \"../../../../include/monolish_blas.hpp\"
#include \"../../../internal/monolish_internal.hpp\"
#include \"tensor_dense_tensvec.hpp\"

namespace monolish::blas {
"


## tensvec Dense
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\>; do
      if [ $prec = "double" ]
      then
        echo "void tensvec(const tensor::tensor_Dense<$prec> &A, const $arg1 &x, $arg2 &y){Dtensvec_core(A, x, y, false);}"
      else
        echo "void tensvec(const tensor::tensor_Dense<$prec> &A, const $arg1 &x, $arg2 &y){Stensvec_core(A, x, y, false);}"
      fi
    done
  done
done

echo ""

## tensvec_* Dense
for trans in N T; do
    for prec in double float; do
        for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\>; do
            for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\>; do
                if [ $prec = "double" ]
                then
                    T=`TRANSPOSE_BOOL $trans`
                    echo "void tensvec_$trans(const tensor::tensor_Dense<$prec> &A, const $arg1 &x, $arg2 &y){Dtensvec_core(A, x, y, $T);}"
                else
                    T=`TRANSPOSE_BOOL $trans`
                    echo "void tensvec_$trans(const tensor::tensor_Dense<$prec> &A, const $arg1 &x, $arg2 &y){Stensvec_core(A, x, y, $T);}"
                fi
            done
        done
    done
done

echo ""

echo "}"
